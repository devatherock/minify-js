docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:1.0.0
      <<: *docker_auth

work_directory: &work_directory
  working_directory: ~/minify-js

resource_class: &resource_class
  resource_class: small

executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:11.0
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
  machine-executor:
    machine:
      image: ubuntu-2204:2023.04.2
    resource_class: medium
    <<: *work_directory
  arm-executor:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  fast_functional_test:
    executor: arm-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/minify-js
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          make docker-build test skip_pull=true
      - store_test_results:
          path: build/test-results

  publish:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t devatherock/minify-js:$TAG \
            -t devatherock/minify-js:latest .

  dockerhub_readme:
    docker:
      - image: peterevans/dockerhub-description:3.4.1
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      DOCKERHUB_REPOSITORY: 'devatherock/minify-js'
      SHORT_DESCRIPTION: 'Github action/CI Plugin to minify html, javascript and css files'
      README_FILEPATH: /README.md
    steps:
      - checkout
      - attach_workspace:
          at: ~/minify-js
      - run: |
          pwd
          cd /
          sh /entrypoint.sh
          cat /action.log

  functional_test:
    parameters:
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - attach_workspace:
          at: ~/minify-js
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          ./gradlew test
      - store_test_results:
          path: build/test-results
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/minify-js:$TAG devatherock/minify-js:$DEV_TAG

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  docker_publish:
    jobs:
      - publish:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
      - dockerhub_readme:
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          requires:
            - publish
      - functional_test:
          name: functional_test_amd
          context:
            - docker-credentials
          runner: machine-executor
          requires:
            - publish
      - functional_test:
          name: functional_test_arm
          context:
            - docker-credentials
          runner: arm-executor
          requires:
            - dockerhub_readme
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - functional_test_amd
            - functional_test_arm

  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish_release

  pr_check:
    jobs:
      - dockerhub_readme:
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          filters:
            branches:
              ignore: master
